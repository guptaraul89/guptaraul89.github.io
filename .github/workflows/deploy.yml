name: Build and Deploy Jekyll Site to GitHub Pages

on:
  push:
    branches:
      - main # Trigger the workflow on push events to the main branch
  workflow_dispatch: # Allows manual triggering from the Actions tab

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3 # Check out the repository code

      - name: Setup Ruby, Bundler, and Cache Dependencies 💎
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3' # Use a recent Ruby version compatible with Jekyll
          bundler-cache: true # Automatically runs bundle install and caches gems

      - name: Build Jekyll Site 🔨
        run: bundle exec jekyll build # Build the Jekyll site into the _site directory
        env:
          JEKYLL_ENV: production # Ensure production environment settings are used

      - name: Deploy to GitHub Pages 🚀
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # Provided by GitHub Actions
          publish_dir: ./_site # Directory containing the built site
          # IMPORTANT: For a User/Org site (username.github.io), we deploy
          # the *built site* to the 'gh-pages' branch. Then, in repo settings,
          # we configure GitHub Pages to *serve* from the 'gh-pages' branch.
          # This keeps your source code clean on the 'main' branch.
          publish_branch: gh-pages # Deploy the built site to the gh-pages branch
          # Optional: uncomment below if you want to force push (useful for clean history)
          # force_orphan: true
          # Optional: uncomment below if you use a custom domain later
          # cname: yourcustomdomain.com